<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lt.money.ibatis.AccountDetailDaoService" >
  <resultMap id="BaseResultMap" type="com.lt.money.model.AccountDetail" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="fk_account_id" property="fkAccountId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="account_time" property="accountTime" jdbcType="TIMESTAMP" />
    <result column="fk_user_id" property="fkUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lt.money.model.AccountDetail" extends="BaseResultMap" >
    <result column="account_desc" property="accountDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fk_account_id, type, money, account_time, fk_user_id, update_time, create_time
  </sql>
  <sql id="Blob_Column_List" >
    account_desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lt.money.model.AccountDetailCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_account_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lt.money.model.AccountDetailCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_account_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <choose >
      <when test="limitStart != -1 and limitEnd != -1" >
        limit ${limitStart} , ${limitEnd}
      </when>
      <when test="limitStart != -1" >
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_account_detail
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_account_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lt.money.model.AccountDetailCriteria" >
    delete from t_account_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lt.money.model.AccountDetail" >
    insert into t_account_detail (id, fk_account_id, type, 
      money, account_time, fk_user_id, 
      update_time, create_time, account_desc
      )
    values (#{id,jdbcType=VARCHAR}, #{fkAccountId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL}, #{accountTime,jdbcType=TIMESTAMP}, #{fkUserId,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{accountDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lt.money.model.AccountDetail" >
    insert into t_account_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fkAccountId != null" >
        fk_account_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="accountTime != null" >
        account_time,
      </if>
      <if test="fkUserId != null" >
        fk_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="accountDesc != null" >
        account_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fkAccountId != null" >
        #{fkAccountId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="accountTime != null" >
        #{accountTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fkUserId != null" >
        #{fkUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountDesc != null" >
        #{accountDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lt.money.model.AccountDetailCriteria" resultType="java.lang.Integer" >
    select count(*) from t_account_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_account_detail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.fkAccountId != null" >
        fk_account_id = #{record.fkAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.accountTime != null" >
        account_time = #{record.accountTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fkUserId != null" >
        fk_user_id = #{record.fkUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountDesc != null" >
        account_desc = #{record.accountDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_account_detail
    set id = #{record.id,jdbcType=VARCHAR},
      fk_account_id = #{record.fkAccountId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      account_time = #{record.accountTime,jdbcType=TIMESTAMP},
      fk_user_id = #{record.fkUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      account_desc = #{record.accountDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_account_detail
    set id = #{record.id,jdbcType=VARCHAR},
      fk_account_id = #{record.fkAccountId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      account_time = #{record.accountTime,jdbcType=TIMESTAMP},
      fk_user_id = #{record.fkUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lt.money.model.AccountDetail" >
    update t_account_detail
    <set >
      <if test="fkAccountId != null" >
        fk_account_id = #{fkAccountId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="accountTime != null" >
        account_time = #{accountTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fkUserId != null" >
        fk_user_id = #{fkUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountDesc != null" >
        account_desc = #{accountDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lt.money.model.AccountDetail" >
    update t_account_detail
    set fk_account_id = #{fkAccountId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      account_time = #{accountTime,jdbcType=TIMESTAMP},
      fk_user_id = #{fkUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      account_desc = #{accountDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lt.money.model.AccountDetail" >
    update t_account_detail
    set fk_account_id = #{fkAccountId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      account_time = #{accountTime,jdbcType=TIMESTAMP},
      fk_user_id = #{fkUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>